{
  "src": {
    "app": {
      "features": {
        "clientes": {
          "clientes-form": {
            "clientes-form.component.css": "",
            "clientes-form.component.html": "<form [formGroup]=\"frmCliente\" class=\"row g-3\">\r\n\r\n  <div class=\"col-md-6\">\r\n    <label for=\"nombres\" class=\"form-label\">Nombres</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"nombres\" maxlength=\"25\" formControlName=\"nombres\">\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <label for=\"apellidos\" class=\"form-label\">Apellidos</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"apellidos\" maxlength=\"25\" formControlName=\"apellidos\">\r\n  </div>\r\n\r\n  <div class=\"col-md-12\">\r\n    <label for=\"direccion\" class=\"form-label\">Dirección</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"direccion\" maxlength=\"50\" formControlName=\"direccion\">\r\n  </div>\r\n\r\n  <div class=\"col-md-12\">\r\n    <label for=\"telefono\" class=\"form-label\">Teléfono</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"telefono\" maxlength=\"12\" formControlName=\"telefono\">\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <label for=\"email\" class=\"form-label\">Email</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"email\" maxlength=\"40\" formControlName=\"email\">\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <label for=\"ruc\" class=\"form-label\">RUC</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"ruc\" maxlength=\"12\" formControlName=\"ruc\">\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <label for=\"ruta\" class=\"form-label\">Ruta</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"ruta\" maxlength=\"40\" formControlName=\"ruta\">\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <label for=\"tipo\" class=\"form-label\">Tipo</label>\r\n    <select id=\"tipo\" class=\"form-select\" formControlName=\"clienteTipo\" >\r\n      @for(item of tipos; track $index ){\r\n      <option [value]=\"item.id\">{{item.nombre}}</option>\r\n      }\r\n    </select>\r\n  </div>\r\n\r\n  <div class=\"col-12\">\r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"onClickSave()\">Guardar</button>\r\n    <button type=\"button\" class=\"btn btn-danger ms-2\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n  </div>\r\n</form>",
            "clientes-form.component.ts": "import { CommonModule, JsonPipe } from '@angular/common';\r\nimport { Component, EventEmitter, inject, Input, Output, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { ClientesService } from '../../../services/clientes.service';\r\nimport { Cliente } from '../../../models/cliente';\r\nimport { ClienteTipoService } from '../../../services/cliente-tipo.service';\r\nimport { ClienteTipo } from '../../../models/clienteTipo';\r\n\r\n@Component({\r\n  selector: 'app-clientes-form',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule, JsonPipe],\r\n  templateUrl: './clientes-form.component.html',\r\n  styleUrl: './clientes-form.component.css',\r\n})\r\nexport class ClientesFormComponent {\r\n  private srvCliente = inject(ClientesService);\r\n  private srvClienteTipo = inject(ClienteTipoService);\r\n  private fb = inject(FormBuilder);\r\n  public tipos: Array<ClienteTipo> = [];\r\n\r\n  public frmCliente = this.fb.group({\r\n    id: [0],\r\n    nombres: [''],\r\n    apellidos: [''],\r\n    direccion: [''],\r\n    telefono: [''],\r\n    email: [''],\r\n    ruc: [''],\r\n    ruta: [''],\r\n    clienteTipo: [{} as ClienteTipo, Validators.required],\r\n  });\r\n\r\n  @Input()\r\n  public clienteObj!: Cliente;\r\n\r\n  @Output()\r\n  public closeModal = new EventEmitter<Cliente>();\r\n\r\n  ngOnInit(): void {\r\n    this.getAllTipo();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.frmCliente.patchValue(this.clienteObj);\r\n    console.log(this.clienteObj);\r\n    console.log(this.frmCliente.value);\r\n    \r\n  }\r\n\r\n  public onClickSave() {\r\n    // this.closeModal.emit();\r\n    console.log(this.tipos);\r\n  }\r\n\r\n  private getAllTipo(): void {\r\n    this.srvClienteTipo.getClienteTipos().subscribe({\r\n      next: (d) => (this.tipos = d),\r\n      error: (e) => alert(e),\r\n    });\r\n  }\r\n}\r\n"
          },
          "clientes.component.css": "a{\r\n    cursor: pointer;\r\n}\r\noptions{\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n}",
          "clientes.component.html": "<div>\r\n  <h2>{{ titulo }}</h2>\r\n  <hr>\r\n  <div>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(-1)\">Nuevo</button>    \r\n  </div>\r\n\r\n  <hr>\r\n  <table class=\"table table-striped table-hover\">\r\n    <thead>\r\n      <tr>\r\n        <th>Id</th>\r\n        <th>Nombre</th>\r\n        <th>Dirección</th>\r\n        <th>Teléfono</th>\r\n        <th>Acciones</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      @for(cliente of clientes; track $index){\r\n      <tr>\r\n        <td>{{ cliente.id }}</td>\r\n        <td>{{ cliente.nombres }}</td>\r\n        <td>{{ cliente.direccion }}</td>\r\n        <td>{{ cliente.telefono }}</td>\r\n        <td>\r\n          <a class=\"btn-sm btn-warning circle\" (click)=\"openModal($index)\"> <i class=\"bi bi-pencil-square\"></i>\r\n          </a> &nbsp;\r\n          <a class=\"btn-sm btn-danger circle\" (click)=\"delete($index)\" > <i class=\"bi bi-x-circle\"></i> </a> &nbsp;\r\n        </td>\r\n      </tr>\r\n      }\r\n  </table>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"clienteModal\" tabindex=\"-1\" aria-labelledby=\"clienteModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"clienteModalLabel\">Agregar/Editar Cliente</h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <!-- <app-clientes-form [frmClienteIn]=\"frmCliente\" (frmClienteOut)=\"onSaveChanges($event)\"\r\n          (closeModal)=\"onCloseModal()\" /> -->\r\n          <app-clientes-form [clienteObj]=\"cliente\"/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>",
          "clientes.component.ts": "import { Component, inject, OnInit, signal } from '@angular/core';\r\nimport { Cliente } from '../../models/cliente';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ClientesService } from '../../services/clientes.service';\r\nimport { ClientesFormComponent } from './clientes-form/clientes-form.component';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ClienteTipo } from '../../models/clienteTipo';\r\n\r\n@Component({\r\n  selector: 'app-clientes',\r\n  standalone: true,\r\n  imports: [RouterModule, ClientesFormComponent],\r\n  templateUrl: './clientes.component.html',\r\n  styleUrl: './clientes.component.css',\r\n})\r\nexport class ClientesComponent {\r\n  private service = inject(ClientesService);\r\n  private modal: any;\r\n\r\n  public titulo = 'Gestión de Clientes';\r\n  public clientes: Array<Cliente> = [];\r\n  public cliente: Cliente = {} as Cliente;\r\n  public idx: number = -1;\r\n\r\n  ngOnInit(): void {\r\n    this.getAll();\r\n    const elem = document.getElementById('clienteModal');\r\n    this.modal = new (window as any).bootstrap.Modal(elem);\r\n  }\r\n\r\n  private getAll(): void {\r\n    this.service.getClientes().subscribe({\r\n      next: (data) => (this.clientes = data),\r\n      error: (e) => alert(e),\r\n    });\r\n  }\r\n  public openModal(i: number) {\r\n    this.idx = i;\r\n    this.cliente = i > -1?this.clientes[i]:this.setBlankCliente();\r\n    this.modal.show();\r\n\r\n  }\r\n\r\n  public delete(i: number) {\r\n    this.clientes.splice(i, 1);\r\n  }\r\n\r\n  setBlankCliente(): Cliente {\r\n    return {\r\n      id: 0,\r\n      nombres: '',\r\n      apellidos: '',\r\n      direccion: '',\r\n      telefono: '',\r\n      ruc: '',\r\n      email: '',\r\n      ruta: '',\r\n      clienteTipo: {} as ClienteTipo\r\n    };\r\n  }\r\n}\r\n"
        }
      },
      "models": {
        "cliente.ts": "import { ClienteTipo } from \"./clienteTipo\";\r\n\r\nexport interface Cliente {\r\n    id:         number;\r\n    nombres:    string;\r\n    apellidos:  string;\r\n    direccion:  string;\r\n    telefono:   string;\r\n    email:      string;\r\n    ruc:        string;\r\n    ruta:       string;\r\n    clienteTipo:ClienteTipo;\r\n}",
        "clienteTipo.ts": "export interface ClienteTipo {\r\n    id:     number;\r\n    nombre: string;\r\n}\r\n"
      }
    }
  }
}